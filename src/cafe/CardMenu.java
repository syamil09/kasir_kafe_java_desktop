/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package cafe;

import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Image;
import javax.swing.ImageIcon;
import java.io.File;
import java.net.URL;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.text.NumberFormat;
import java.util.Locale;
import java.util.function.Consumer;
import java.util.function.Function;
import model.Menu;
import model.SelectedMenu;

/**
 *
 * @author Leonovo
 */
public class CardMenu extends javax.swing.JPanel {

    /**
     *
     * @param onChangeCheckBuy
     */
    public void setOnChangeCheckBuy(Consumer<SelectedMenu> onChangeCheckBuy) {
        this.onChangeCheckBuy = onChangeCheckBuy;
    }

    public void setOnChangeQty(Consumer<Integer> onChangeQty) {
        this.onChangeQty = onChangeQty;
    }
    
    public void resetInput() {
        this.cbBuy.setSelected(false);
        this.spnQty.setValue(0);
    }
    
    private Consumer<SelectedMenu> onChangeCheckBuy;
    private Consumer<Integer> onChangeQty;
    
    /**
     * Creates new form CardMenu
     * @param menu
     */
    public CardMenu(Menu menu) {
        initComponents();
        this.lblName.setText(menu.getNama());
        this.lblPrice.setText(formatRp(menu.getHarga()));
        setImage(menu.getGambar());
        
      
    }
    
    private String formatRp(double amount) {
        // Create a Locale for Indonesia
        Locale indonesia = new Locale("id", "ID");

        // Create a NumberFormat for the specified Locale and Currency
        NumberFormat rupiahFormat = NumberFormat.getCurrencyInstance(indonesia);
        
        // Set maximum fraction digits to 0
        rupiahFormat.setMaximumFractionDigits(0);
        
        // Format the number as Rupiah
        String formattedAmount = rupiahFormat.format(amount);
        return formattedAmount;
    }
    
    private void setImage(String path) {
        URL url;

        try {
            this.lblImage.setSize(200, 100);
        
            url = getClass().getResource(path);
            ImageIcon icon = new ImageIcon(url);
            Image img = icon.getImage().getScaledInstance(this.lblImage.getWidth(), this.lblImage.getHeight(), Image.SCALE_SMOOTH);
            this.lblImage.setIcon(new ImageIcon(img));
        } catch (Exception e) {
            url = getClass().getResource("/images/default.png");
            ImageIcon icon = new ImageIcon(url);
            Image img = icon.getImage().getScaledInstance(this.lblImage.getWidth(), this.lblImage.getHeight(), Image.SCALE_SMOOTH);
            this.lblImage.setIcon(new ImageIcon(img));
            System.err.println(e);
            System.out.println("error show image : "+ path);
        }
    }
   
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        lblPrice = new javax.swing.JLabel();
        spnQty = new javax.swing.JSpinner();
        cbBuy = new javax.swing.JCheckBox();
        lblImage = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(168, 250));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel4.setText("Harga:");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 152, -1, -1));

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel5.setText("Jumlah:");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 181, -1, -1));

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel6.setText("Pembelian:");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 216, -1, -1));

        lblName.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblName.setText("Cold Coffee");
        add(lblName, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 113, 156, 27));

        lblPrice.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        lblPrice.setText("$3.0");
        add(lblPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(72, 152, -1, -1));

        spnQty.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        spnQty.setModel(new javax.swing.SpinnerNumberModel(0, 0, 50, 1));
        spnQty.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spnQtyStateChanged(evt);
            }
        });
        add(spnQty, new org.netbeans.lib.awtextra.AbsoluteConstraints(72, 178, 57, -1));

        cbBuy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbBuyActionPerformed(evt);
            }
        });
        add(cbBuy, new org.netbeans.lib.awtextra.AbsoluteConstraints(72, 211, -1, -1));

        lblImage.setToolTipText("");
        add(lblImage, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 160, 101));
    }// </editor-fold>//GEN-END:initComponents

    private void cbBuyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbBuyActionPerformed
        if (this.onChangeCheckBuy != null) {
            int qty = Integer.parseInt(spnQty.getValue().toString());
            SelectedMenu menu = new SelectedMenu(cbBuy.isSelected(), qty);
            this.onChangeCheckBuy.accept(menu);
            if (qty == 0) {
                this.cbBuy.setSelected(false);
            }            
        }
//        int qty = Integer.parseInt(jSpinner1.getValue().toString());

//        if(qtyIsZero(qty) && jCheckBox1.isSelected()) {
//            x++;
//            if(x == 1) {
//                royalCafe();
//            }
//            double price = qty * 3.0;
//            total += price;
//            getTax((int) total);
//            jTextArea.setText(jTextArea.getText() + x + ". " + jLabel7.getText() + "\t\t\t" + String.format("%.2f", price) + "\n");
//            dudate();
//        } else {
//            jCheckBox1.setSelected(false);
//        }
    }//GEN-LAST:event_cbBuyActionPerformed

    private void spnQtyStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spnQtyStateChanged
        // TODO add your handling code here:
        if (this.onChangeQty != null) {
            this.onChangeQty.accept((Integer) spnQty.getValue());
        }
    }//GEN-LAST:event_spnQtyStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox cbBuy;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel lblImage;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblPrice;
    private javax.swing.JSpinner spnQty;
    // End of variables declaration//GEN-END:variables
}
